geom_density(alpha=I(0.3)) + theme_bw() +
facet_wrap(~mpaa)
mov.df$decade = mov.df$year %/% 10 * 10
table(mov.df$decade)
1955%/%10
1955%/%100
19555%/%100
mov50plus.df = mov.df[mov.df$decade >= 1950,]
ggplot(mov50plus.df, aes(x=rating,fill=factor(Drama))) +
geom_density(alpha=I(0.4))+ theme_bw()+
facet_grid(decade ~ mpaa )
install.packages("Shiny")
install.packages("shiny")
library(shiny)
runApp("D:/R/R-3.1.2/wd/dataProduct/")
runApp("D:/R/R-3.1.2/wd/dataProduct/")
runApp("D:/R/R-3.1.2/wd/dataProduct/")
runApp("D:/R/R-3.1.2/wd/dataProduct/")
runApp("D:/R/R-3.1.2/wd/dataProduct/")
runApp("D:/R/R-3.1.2/wd/dataProduct/")
runApp("D:/R/R-3.1.2/wd/dataProduct/")
runApp("D:/R/R-3.1.2/wd/dataProduct/")
runApp("D:/R/R-3.1.2/wd/dataProduct/")
irisSmall.df <- subset(iris,Species != "versicolor")
p1 <- ggplot(irisSmall.df,aes(x=Sepal.Width,y=Sepal.Length,))+geom_point(aes(color=factor(Species)))
library(ggplot2)
p2 <- ggplot(irisSmall.df, aes(x=Petal.Width,y=Petal.Length))+geom_point(aes(color=factor(Species)))
grid.arrange(p1,p2,nrow=1)
grid.arrange()
grid.arrange(p1,p2,nrow=1)
library(gridExtra)
grid.arrange(p1,p2,nrow=1)
p1 <- ggplot(irisSmall.df,aes(x=Sepal.Width,y=Sepal.Length,))+geom_point(aes(color=factor(Species)))
grid.arrange(p1,p2,nrow=1)
ggplot(mov50plus.df,aes(x=factor(year),y=length))+geom_boxplot()+theme_bw()
mov.df = movies[as.character(movies$mpaa) %in% c("PG","PG-13","R")]
mov.df = movies[as.character(movies$mpaa) %in% c("PG","PG-13","R"),]
mov.df$mpaa = mov.df$mpaa[ ,drop=TRUE]
mov.df$decade = mov.df$year %/% 10 * 10
mov50plus.df = mov.df[mov.df$decade >= 1950,]
ggplot(mov50plus.df,aes(x=factor(year),y=length))+geom_boxplot()+theme_bw()
ggplot(mov50plus.df,aes(x=factor(year),y=length))+geom_boxplot()+theme_bw()+cord_flip()
ggplot(mov50plus.df,aes(x=factor(year),y=length))+geom_boxplot()+theme_bw()+coord_flip()
data(baseball)
playerTeam.df = ddply(baseball,.(id),function(df)length(unique(df$team)))
library(ggplot2)
library(plyr)
library(grid)
library(reshape2)
library(gridExtra)
library(MASS)
library(HistData)
playerTeam.df = ddply(baseball,.(id),function(df)length(unique(df$team)))
data(baseball)
names(baseball)
?ddply
playerTeam.df = ddply(baseball,.(id),function(df)length(unique(df$team)))
dim(playerTeam.df)
names(playerTeam.df)
teamsPerPlayer.df = as.data.frame(table(playerTeam.df$V1))
colnames(teamsPerPlayer.df) = c("teamsPlayedFor","numberOfPlayers")
teamsPerPlayer.df$teamsPlayedFor = as.numeric(teamsPerPlayer.df$teamsPlayedFor)
head(playerTeam.df)
head(teamsPerPlayer.df)
dim(teamsperPlayer.df)
dim(teamsPerPlayer.df)
teamsPerPlayer.df
ggplot(teamsPerPlayer.df,aes(x=factor(1),y=numberOfPlayers,fill=factor(teamsPlayedFor))) +
geom_bar(stat="identity") +
theme_bw() +
coord_polar(theta="y")
runApp()
runAPP()
library(shiny)
runApp()
runApp("D:/R/R-3.1.2/wd/dataProduct/")
runApp("D:/R/R-3.1.2/wd/dataProduct/")
x <- 0
runApp(0)
runApp("D:/R/R-3.1.2/wd/dataProduct/")
runApp("D:/R/R-3.1.2/wd/dataProduct/")
library(manipulate)
manipulate(plot(1:x), x = slider(1,
100))
library(UsingR)
myHist <- function(mu){
hist(galton$child,col="blue",breaks=100)
lines(c(mu, mu), c(0, 150),col="red",lwd=5)
mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(63, 140, paste("MSE = ", round(mse, 2)))
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
shiny::runApp('D:/R/R-3.1.2/wd/dataProduct')
library(UsingR)
myHist <- function(mu){
hist(galton$child,col="blue",breaks=100)
lines(c(mu, mu), c(0, 150),col="red",lwd=5)
mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(63, 140, paste("MSE = ", round(mse, 2)))
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
manipulate(myHist(mu), mu = slider(62, 74))
shiny::runApp('D:/R/R-3.1.2/wd/dataProduct')
library(ggplot2)
library(plyr)
library(grid)
library(reshape2)
library(gridExtra)
library(MASS)
library(HistData)
ct.plot = ggplot(diamonds, aes(carat,price))+geom_point(alpha=I(0.1),size=1)+
theme_bw()
ct.plot
ct.plot = ggplot(diamonds, aes(carat,price))+geom_point(alpha=I(0.1),size=1)+
theme_bw()
ct.plot
ct.plot + scale_y_log10()
ct.plot + scale_x_log10()
ct.plot+coord_trans(x="log10",y="log10")
ct.plot+scale_y_continuous(breaks = seq(0,20000,by=2500))+scale_x_continuous(breaks=seq(0,5,by=0.5))
scm.plot = ggplot(iris,aes(x=Sepal.Length,y=Sepal.Width,color=factor(Species))) + geom_point(size=3)+
theme_bw()
scm.plot + scale_color_manual(values=c("black","red","blue"))
scm.plot + scale_color_manual(values=c("setosa"= "black","versicolor"= "red","virginica"= "blue"))
25
ggplot(baseball,aes(x=hr,y=rbi,color=h))+ geom_point()+
theme_classic() + scale_color_gradient(low=red,high=green)
ggplot(baseball,aes(x=hr,y=rbi,color=h))+ geom_point()+
theme_classic() + scale_color_gradient(low="red",high="green")
sin.df <-data.frame(x=1:1000,y=sin(1:1000),rr=1:1000 - (2*pi)*(1:1000 %/% 2*pi))
hist(sin.df$rr)
summary(sin.df)
ggplot(sin.df,aes(x,y,color=rr))+geom_point(size=2)+theme_bw()+scale_color_gradientn(colors=c("black","yellow","blue"))
ggplot(sin.df,aes(x,y,color=rr))+geom_point(size=2)+theme_bw()+scale_colour_gradientn(colours=c("black","yellow","blue"))
scgn.plot = ggplot(baseball,aes(x=hr,y=rbi,color=h))+ geom_point()+ theme_bw()
scgn.plot+scale_color_gradientn(colours=rainbow(7))
scgn.plot+scale_color_gradientn(colours=rep(rainbow(10)))
scgn.plot+scale_color_gradientn(colours=rep(rainbow(10)).2)
scgn.plot+scale_color_gradientn(colours=rep(rainbow(10),2))
ggplot(iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species)) +
geom_point(size=3) +
scale_colour_brewer(palette="Set1")+theme_bw()
playerTeam.df = ddply(baseball,.(id),function(df)length(unique(df$team)))
teamsPerPlayer.df = as.data.frame(table(playerTeam.df$V1))
teamsPerPlayer.df
colnames(teamsPerPlayer.df) = c("teamsPlayedFor","numberOfPlayers")
str(teamsPerPlayer.df)
teamsPerPlayer.df$teamsPlayedFor = as.numeric(teamsPerPlayer.df$teamsPlayedFor)
ggplot(teamsPerPlayer.df,aes(x=factor(1),y=numberOfPlayers,fill=factor(teamsPlayedFor))) +
geom_bar(stat="identity") +
theme_bw() +
coord_polar(theta="y")
ggplot(teamsPerPlayer.df,aes(x=factor(1),y=numberOfPlayers,fill=factor(teamsPlayedFor))) +
geom_bar(stat="identity") +
theme_bw() +
coord_polar(theta="y")+
scale_fill_manual(values=rainbow(12),guide= guide_legend(ncol = 4,byrow=TRUE))+
theme(legend.position = "top",
panel.grid.minor.y = element_line(colour = "grey"),
panel.grid.major.y = element_line(colour = "grey"),
axis.text.x = element_text(size=rel(1.5)),
axis.text.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()) +
scale_y_discrete(limits= seq(0,1228,by=100))+
xlab("")
library(ggplot2)
?floor
round(5.5)
round(5.5,3)
round(5.55,3)
round(5.555,3)
round(5.5555,3)
floor(5.5)
floor(5.5,1)
floor(5.5,2)
floor(5.5)
ceil(5.5)
ceiling(5.5)
ceiling(5.5,65)
round(5.5,1)
round(5.5,2)
round(5.5)
runif(5)
source('D:/rotations/Dan Bolon/Projects/R_course/Session5.R', echo=TRUE)
f1= makePlotFunction(size=10000,fun=rnorm,mean=2,range=80,rangeLower=100)
f1(xVec=c(1,2),yVec=c(0,2),pMin=2.2,pMax=0.2)
size = 10000
range = 80
rangeLower = 2
input1 = floor(runif(size)*(range))+ rangeLower
function(x){vec<-sapply(fun(x,mean),floor);
c(mean(vec),var(vec),length(vec))}))))
function(x){vec<-sapply(fun(x,mean),floor);
c(mean(vec),var(vec),length(vec))}
function(5)
f1= makePlotFunction(size=10000,fun=rnorm,mean=2,range=80,rangeLower=100)
size = 10000
fun = rnorm
mean = 2
range = 80
rangeLower = 100
df<-as.data.frame(t(as.matrix(
sapply(floor(runif(size)*(range))+ rangeLower,
function(x){vec<-sapply(fun(x,mean),floor);
c(mean(vec),var(vec),length(vec))}))))
names(df1)
names(df)
colnames(df) <- c("mean","variance","n")
colnames(df) <- c("mean","variance","n")
names(df)
head(df)
summary(mean)
summary(df)
f1(xVec=c(1.4,1.6),yVec=c(1.1,1.4),pMin=2.2,pMax=0.2)
library(MASS)
data(caith)
caith.melt=melt(
cbind(as.data.frame(caith),
row=rownames(caith)),
id.var=c("row"))
library(Reshape)
library(Reshape2)
library(reshape)
library(reshape)
caith.melt=melt(
cbind(as.data.frame(caith),
row=rownames(caith)),
id.var=c("row"))
caith.melt
caith
colnames(caith.melt) = c("eyeColor","hairColor","proportion")
cbind(as.data.frame(caith),
row=rownames(caith))
ggplot(caith.melt,aes(x=eyeColor,y=proportion,fill=hairColor,color=haircolor))+
geom_bar(position="fill",stat="identity,size=1")+
scale_fill_manual(values=c(topo.colors(4),topo.colors(1)))+
theme_bw()+
scale_color_manual(values=rep("black",6))
ggplot(caith.melt,aes(x=eyeColor,y=proportion,fill=hairColor,color=haircolor))+
geom_bar(position="fill",stat="identity",size=1)+
scale_fill_manual(values=c(topo.colors(4),topo.colors(1)))+
theme_bw()+
scale_color_manual(values=rep("black",6))
ggplot(caith.melt,aes(x=eyeColor,y=proportion,fill=hairColor,color=hairColor))+
geom_bar(position="fill",stat="identity",size=1)+
scale_fill_manual(values=c(topo.colors(4),topo.colors(1)))+
theme_bw()+
scale_color_manual(values=rep("black",6))
?seq_along
seq(1,5,by=2)
seq1 <- seq_along(1,5,by=2)
seq1 <- seq(1,5,by=2)
seq1
seq2 <- seq.along(seq1)
seq2 <- seq_along(seq1)
seq2
seq_len(seq1)
seq_len(3)
seq_len(5)
seq.int(from=1,to=5,by=1)
steps=500
?reduce
?Reduce
reduceFn = function(x,y)c(x[1]+runif(1)*2-1,x)
reduceFn(5,5)
randomWalk = function(steps)data.frame(x=Reduce(f=reduceFn,1:steps,init=c(1)),)
randomWalk = function(steps)data.frame(x= Reduce(f=reduceFn,1:steps,init=c(1)),
y= Reduce(f=reduceFn,1:steps,init=c(1)),
index=1:(steps + 1))
ggplot(randomWalk(1000),aes(x,y,color=index))+geom_line()
RW <- randomWalk(1000)
head(RW)
x= Reduce(f=reduceFn,1:steps,init=c(1)
)
ggplot(randomWalk(1000),aes(x,y,color=index))+geom_path() + geom_point()
y= Reduce(f=reduceFn,1:steps,init=c(1)),
index=1:(steps + 1))
y= Reduce(f=reduceFn,1:steps,init=c(1))
hist(x)
hist(y)
add <- function(x) Reduce("+", x)
add(list(1, 2, 3))
?rnorm
n1 <- rnorm(20)
n2 <- rnorm(20)
cor(n1,n2)
n3 <- mean(n1,n2)
n3 <- (n1+n2)/length(n1)
n1
n2
n3
cor(n1,n3)
r1 <- (cor(n1,n2))^2
r1
r1 <- (cor(n1,n3))^2
r1 <- (cor(n2,n3))^2
r1 <- (cor(n1,n2))^2
r2 <- (cor(n1,n3))^2
r3 <- (cor(n2,n3))^2
r1
r1,r2,r3
r1
r2
r3
n <- matrix(r1,r2,r3)
n1
?matrix
c(r1,r2,r3)
library(shiny)
runExample("01_hello")
?seq
runExample("02_text")
runExample("03_reactivity")
runExample("05_sliders")
runExample("06_tabsets")
data(iris)
str(iris)
names(iris)
summary(iris)
library(ggplot2)
g <- ggplot(iris,aes(Sepal.Length~Sepal.Width,colour=Species))
g + geom_point()
g <- ggplot(iris,aes(x=Sepal.Length,y=Sepal.Width,colour=Species))
g + geom_point()
g + geom_point(size=4)
g + geom_point(size=2)
g + geom_point(size=3)
g + geom_point(size=4)
g <- ggplot(iris,aes(x=Petal.Length,y=Petal.Width,colour=Species))
g + geom_point(size=4)
v_petalL <- iris[iris$Species == "versicolor" & "Petal.Length"]
v_petalL <- iris[iris$Species == "versicolor" , "Petal.Length"]
sort(v_petalL)
vi_petalL <- iris[iris$Species == "virginica" , "Petal.Length"]
sort(vi_petalL)
v_petalW <- iris[iris$Species == "versicolor" , "Petal.Width"]
sort(v_petalW)
?iris
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
library(shiny)
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
g + geom_point(size=4)
PL(input){
PL <- function(input){
if (input < 2){
"a"
}
else if (input$decimal <= 4.8){
"b"
}
else{"c"}
}
PL(5)
PL <- function(input){
if (input < 2){
a="a"
}
else if (input$decimal <= 4.8){
b="b"
}
else{c="c"}
}
PL(5)
summary(iris)
library(caret)
data(iris)
inTrain <- createDataPartition(y=iris$Species,p=0.7,list=FALSE)
training <- iris[inTrain,]
modFit <- train(Species~., method="rpart"data=training)]
modFit <- train(Species~., method="rpart",data=training)]
modFit <- train(Species~., method="rpart",data=training)
newData <- data.frame(Sepal.Length=input$SL,Sepal.Width=input$SW,
Petal.Length=PL,Petal.Width=input$PW)
newData <- data.frame(Sepal.Length=5,Sepal.Width=5,
Petal.Length=5,Petal.Width=5)
newData
predict(modFit,newData)
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
inTrain <- createDataPartition(y=iris$Species,p=0.7,list=FALSE)
training <- iris[inTrain,]
modFit <- train(Species~., method="rpart",data=training)
newData <- data.frame(Sepal.Length=5,Sepal.Width=5,
Petal.Length=5,Petal.Width=5)
predict(modFit,newData)
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
names(iris)
names(iris)
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
runApp("D:/R/R-3.1.2/wd/dataProduct/project/")
sc <- read.delim(file.choose())
names(sc)
sc <- read.csv(file.choose())
names(sc)
str(sc)
sc_short <- aggregate(s~position,data=sc,mean)
sc_short
write.csv(sc_short,col.names=c("position","meanS"))
write.csv(sc_short,file="D:/R/R-3.1.2/meanS.csv",col.names=c("position","meanS"))
library(slidify)
setwd("D:/R/R-3.1.2/wd/dataProduct/project/")
author("Li_Jiang")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
?iris
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
library(caret)
data(iris)
names(iris)
g<-ggplot(iris,aes(Petal.Width,Sepal.Width,colour=Species))
g+geom_point(size=4)+theme_classic()
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
library(rattle)
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
iris
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
pred
testing
length(pred)
dim(testing)
slidify("index.Rmd")
browseURL("index.html")
result <- confusionMatrix(pred,testing[ ,5])
result
summary(result)
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
par(mar=c(3,4,3,4))
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
publish_github("missingboy","dataProduct")
publish_github("missingboy","dataProductSlides")
publish_github("missingboy","dataProductSlides")
publish_github("dataProductSlides","missingboy")
